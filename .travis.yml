---
## note: can't fully test osquery inside docker as will not be able have kernel /dev/osquery
dist: trusty
sudo: required
rvm:
  - 2.6

env:
  - distribution: centos
    version: 8
    suite: default
  - distribution: centos
    version: 7
    suite: default
  - distribution: ubuntu
    version: 18.04
    suite: default
  - distribution: ubuntu
    version: 16.04
    suite: default
#  - distribution: ubuntu
#    version: 14.04
#  - distribution: ubuntu
#    version: 12.04
#  - distribution: alpine
#    version: 3.4
  - distribution: debian
    version: 9
    suite: default
  - distribution: centos
    version: 7
    suite: default-osquery-syslog
  - distribution: ubuntu
    version: 18.04
    suite: default-osquery-syslog
  - distribution: centos
    version: 7
    suite: default-osquery-syslog-fs
  - distribution: ubuntu
    version: 18.04
    suite: default-osquery-syslog-fs
  - distribution: ubuntu
    version: 18.04
    suite: default-profiling
  - distribution: ubuntu
    version: 18.04
    suite: default-fimfiles
  - distribution: ubuntu
    version: 18.04
    suite: default-auditd
#  - distribution: ubuntu
#    version: 18.04
#    suite: default-fleetmanager

before_install:
  - env
  - pwd
  - find -ls
## use appropriate role path and not github name
  - "[ -f get-dependencies.sh ] && sh -x get-dependencies.sh"
  - sudo pip install ansible
  - 'echo "gem: --no-document" >> ~/.gemrc'
## need to use chef gem for some reason? BAD PATH https://github.com/chef/chef-dk/issues/15
#  - chef gem install kitchen
  - gem install kitchen
  - gem install kitchen-ansible
  - gem install kitchen-sync
  - gem install kitchen-docker
  - gem list
  - which kitchen
  - KITCHEN_YAML=.kitchen.docker.yml kitchen diagnose --all

  - sudo sysctl -w fs.inotify.max_user_watches=524288
  - sudo sysctl -w fs.inotify.max_user_instances=256
  - sudo sysctl -w fs.inotify.max_queued_events=32768

script:
## avoid locale issue under xenial docker, https://github.com/pypa/pip/issues/3575
  - export LC_ALL=C.UTF-8
  - export LANG=C.UTF-8
  - KITCHEN_YAML=.kitchen.docker.yml kitchen verify ${suite}-${distribution}-${version//./}

after_failure:
  # Check what happened on systemd systems.
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'osqueryi --line \"SELECT version, build, platform FROM os_version;\"'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'osqueryi --line \"SELECT version from osquery_info;\"'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ps ax | grep osquery'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'cat /etc/osquery/osquery.conf'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'apt-get install -qy grep'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'egrep \"fim.*CREATED.*fim-testing\" /var/log/osquery/osqueryd.results.log'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'grep fim-testing /var/log/osquery/osqueryd.results.log'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'egrep \"fim.*CREATED.*fim-[a-z]*\" /var/log/osquery/osqueryd.results.log | wc -l'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'egrep \"fim.*CREATED.*fim-[a-z]*\" /var/log/osquery/osqueryd.results.log'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'grep fim-testing /var/log/osquery/osqueryd.results.log'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'grep too_many_events /var/log/osquery/osqueryd.results.log'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'grep excluded /var/log/osquery/osqueryd.results.log'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ulimit -a'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ls -l /var/osquery/osquery.db/ | wc -l'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'lsof | grep osqueryd'
  - /sbin/sysctl fs.inotify
  - /sbin/sysctl fs.file-max
  - ulimit -a
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'wc /var/log/osquery/osqueryd.results.log'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'tail -100 /var/log/osquery/osqueryd.results.log'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'grep SECCOMP /var/log/audit/audit.log'
  - sudo grep SECCOMP /var/log/audit/audit.log
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ansible -i localhost, --connection=local -m setup localhost'

after_script:
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'systemctl -l --no-pager status osqueryd'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'journalctl -xe --no-pager'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ls -lA /tmp/'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'grep -i error /var/log/osquery/osqueryd.results.log'
  # Clean up
  - KITCHEN_YAML=.kitchen.docker.yml kitchen destroy ${suite}-${distribution}-${version//./}

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
